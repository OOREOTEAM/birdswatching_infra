pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws_access_key_id')
        AWS_SECRET_ACCESS_KEY = credentials('aws_secret_access_key')
        AWS_DEFAULT_REGION    = 'eu-central-1'
    }

    stages {

        stage('Clone repo via SSH') {
            steps {
                dir('flask') {
                    git branch: 'main',
                        url: 'git@github.com:OOREOTEAM/birdswatching_app.git',
                        credentialsId: '92ebdc9b-acc7-462a-b02d-abe695f18c40'
                }
            }
        }

        stage('Ping EC2 via Ansible') {
            steps {
                withCredentials([
                    sshUserPrivateKey(
                        credentialsId: 'oreo_ssh',
                        keyFileVariable: 'SSH_KEY',
                        usernameVariable: 'SSH_USER'
                    )
                ]) { 
                    sh '''
                    export ANSIBLE_HOST_KEY_CHECKING=False
                    ansible-inventory -i ansible/aws_ec2.yml --graph
                    ansible all -i ansible/aws_ec2.yml -m ping -u ubuntu --private-key "$SSH_KEY"
                    '''
                }
            }
        }

        stage('Configure vms in parallel') {
            parallel {
                stage('Configure lb') {
                    steps {
                        withCredentials([sshUserPrivateKey(
                            credentialsId: 'vagrantssh',
                            keyFileVariable: 'SSH_KEY',
                            usernameVariable: 'SSH_USER'
                        )]) {
                            sh 'cd ansible && ansible-playbook -i /vagrant/inventory lb_install_nginx.yml --private-key $SSH_KEY'
                        }
                    }
                }
                
            }
        }

    }
}
