pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Terraform Init') {
            steps {
                script {
                    dir('terraform/environments') {
                        echo "Running Terraform init for stage"
                        withCredentials([[
                            $class: 'AmazonWebServicesCredentialsBinding',
                            credentialsId: 'aws_credentials',
                            accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                            secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']])
                         {
                            sh "make init"  //stage_01 is default enviroment no ENV variable needed
                        }
                    }
                }
            }
        }


        stage('Terraform Plan') {
            steps {
                script {
                    dir('terraform/environments') {
                        echo "Running Terraform plan for stage"
                        withCredentials([[
                            $class: 'AmazonWebServicesCredentialsBinding',
                            credentialsId: 'aws_credentials',
                            accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                            secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']])
                         {
                            sh "make plan" //stage_01 is default enviroment no ENV variable needed
                        }
                    }
                }
            }
        }

        stage('Manual Approval') {
            steps {
                timeout(time: 30, unit: 'MINUTES') {
                    input(
                        id: 'deploy-approval',
                        message: "Review the Terraform plan. Do you want to apply these changes to the stage environment?",
                        ok: 'Yes, Apply Changes',
                        cancel: 'No, Abort Pipeline'
                    )
                }
            }
        }


        stage('Terraform Apply') {
            steps {
                script {
                    dir('terraform/environments') {
                        echo "Applying Terraform changes for stage enviroment"
                        withCredentials([[
                            $class: 'AmazonWebServicesCredentialsBinding',
                            credentialsId: 'aws_credentials',
                            accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                            secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']])
                        {
                            sh "make apply"  //stage_01 is default enviroment no ENV variable needed
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
