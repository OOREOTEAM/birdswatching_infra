pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws_access_key_id')
        AWS_SECRET_ACCESS_KEY = credentials('aws_secret_access_key')
        AWS_DEFAULT_REGION    = 'eu-central-1'
    }

    stages {

        stage('Clone repo via SSH') {
            steps {
                dir('flask') {
                    git branch: 'main',
                        url: 'git@github.com:OOREOTEAM/birdswatching_app.git',
                        credentialsId: '92ebdc9b-acc7-462a-b02d-abe695f18c40'
                }
            }
        }

        stage('Configure web') {
                     steps {
                        withCredentials([
                            string(credentialsId: 'dbuser', variable: 'DB_USER'),
                            string(credentialsId: 'dbpass', variable: 'DB_PASS'),
                            string(credentialsId: 'dbname', variable: 'DB_NAME'),
                            string(credentialsId: 'default_flask_adminpass', variable: 'FLASK_PASS'),
                            sshUserPrivateKey(
                                credentialsId: 'oreo_ssh',
                                keyFileVariable: 'SSH_KEY',
                                usernameVariable: 'SSH_USER'
                            )
                        ]) {
                        sh '''
                        export ANSIBLE_HOST_KEY_CHECKING=False
                            ansible-inventory -i ansible/aws_ec2.yml --graph
                            ansible-playbook -i ansible/aws_ec2.yml ansible/web_install_nginx.yml -u ubuntu --private-key "$SSH_KEY" --limit _dev_01-webapp-asg \
                            --private-key "$SSH_KEY" \
                            -e "db_user=${DB_USER}" \
                            -e "db_pass=${DB_PASS}" \
                            -e "db_name=${DB_NAME}" \
                            -e "flask_pass=${FLASK_PASS}" \
                            '''
                      }
                  }
                }
          }
}
